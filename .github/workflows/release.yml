name: release

on:
  push:
    branches:
      - master

defaults:
  run:
    shell: bash

# uses: lhotari/action-upterm@v1 # if ssh is needed

jobs:
  publish-artifact:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      packages: write
      id-token: write  # Required for npm provenance generation

    outputs:
      new_release_version:   ${{ steps.semantic.outputs.new_release_version }}
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}

    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
          token: ${{ secrets.ACTIONS_TOKEN }}

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm

      - run: npm ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: make ci

      - uses: cycjimmy/semantic-release-action@v4
        id: semantic
        with:
          semantic_version: 24
          extra_plugins: |
            @semantic-release/git@10.0.1
            @semantic-release/changelog@6.0.0
            @semantic-release/exec@6.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
          NPM_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.ACTIONS_TOKEN }}

      - name: Push updates to branch for major version
        # if there is a new version published, let's say v1.2.3
        # then this step will update branch "v1" to this commit
        if: steps.semantic.outputs.new_release_published == 'true'
        run: "git push https://x-access-token:${{ secrets.ACTIONS_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git HEAD:refs/heads/v${{steps.semantic.outputs.new_release_major_version}}"

      - name: prepare npm
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          # npm --no-git-tag-version version ${{ steps.semantic.outputs.new_release_version }}
          jq 'del(.publishConfig) | . + { publishConfig: { registry: "https://registry.npmjs.org/", "access": "public", "provenance": true } }' package.json >package2.json && mv package2.json package.json
          # Ensure npm provenance is enabled
          npm config set provenance true

      - name: Publish to NPM
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: public
